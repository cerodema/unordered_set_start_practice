// Example program
#include <iostream>
#include <string>
#include <unordered_set>
#include <algorithm>

void intSet()
{
        // set of ints  // there is no 4! // setOfInt({1, 2, 3, 5, 6});
  std::unordered_set<int> setOfInt;
  
    // add numbers, ints, to the set
  setOfInt.insert(1);
  setOfInt.insert(2);
  setOfInt.insert(3);
  setOfInt.insert(5);
    
    // a number indicating the number to be found
  int index = 5;
  
    /* Iterator to receive the "index" which is an
    iterator pointer returned by the set or end() */
    
  std::unordered_set<int>::const_iterator itresult = setOfInt.find(index); 
    
  
    // check weather it's in the set
  if(itresult != setOfInt.end() )
  {
    std::cout << index << " Exist!" << std::endl;
      
  } 
    else 
  {
    std::cout << index << " Does not Exist!" << std::endl;
      
  }
}

void strSet()
{
        // create set of strings to look through 
    std::unordered_set<std::string> setOfStr;
    
        // add strings that we will look for (Keys)
    setOfStr.insert("one");
    setOfStr.insert("two");
    setOfStr.insert("three");
    setOfStr.insert("four");
    
        // create the iterator to use for searching
    std::unordered_set<std::string>::const_iterator itkey = setOfStr.find("three");
    
        // check whether the key exists
    if(itkey != setOfStr.end() )
    {
        std::cout << " Exist!" << std::endl;
      
    } else {
        std::cout << " Does not Exist!" << std::endl;
      
    }
  
}

int main()
{
    strSet();
  
}
